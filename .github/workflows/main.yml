name: Windows tests

on:
  push:
    branches:
      - main
      - maintenance/**
  pull_request:
    branches:
      - main
      - maintenance/**

permissions:
  contents: read  # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_commit_message:
    name: Get commit message
    uses: ./.github/workflows/commit_message.yml

  fast_spin:
    name: fast, py3.12/npAny, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: 'environment.yml'

      - name: Install LLVM
        run: |
          Invoke-WebRequest https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.5/LLVM-19.1.5-win64.exe -UseBasicParsing -OutFile LLVM-x64.exe
          Start-Process -FilePath ".\LLVM-x64.exe" -ArgumentList "/S" -Wait
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install rtools (optional)
        run: |
          choco install rtools -y --no-progress --force --version=4.0.0.20220206
          echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH

      - name: pip-packages
        run: |
          pip install numpy cython pybind11 pythran meson ninja pytest pytest-xdist pytest-timeout pooch spin hypothesis
          python -m pip install -r requirements/openblas.txt

      - name: Build
        run: |
          $env:cc = "clang-cl"
          $env:cxx = "clang-cl"
          $env:fc = "flang-new"
          spin build --with-scipy-openblas

      - name: Test
        run: |
          $env:OPENBLAS_NUM_THREADS=1
          spin test -j2 -- --durations=25

  ###########################################################################

  full_spin_min_numpy:
    name: full, py3.11/npMin, spin
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'environment.yml'

      - name: Install LLVM
        run: |
          Invoke-WebRequest https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.5/LLVM-19.1.5-win64.exe -UseBasicParsing -OutFile LLVM-x64.exe
          Start-Process -FilePath ".\LLVM-x64.exe" -ArgumentList "/S" -Wait
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install rtools (optional)
        run: |
          choco install rtools -y --no-progress --force --version=4.0.0.20220206
          echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH

      - name: pip-packages
        run: |
          python -m pip install numpy==1.26.4 cython pybind11 pythran meson-python meson ninja pytest pytest-xdist pytest-timeout pooch spin hypothesis
          python -m pip install -r requirements/openblas.txt

      - name: Build
        run: |
          $env:cc = "clang-cl"
          $env:cxx = "clang-cl"
          $env:fc = "flang-new"
          spin build --with-scipy-openblas

      - name: Test
        run: |
          $env:OPENBLAS_NUM_THREADS=1
          spin test -j2 --mode full -- --durations=25 --timeout=60

  ###########################################################################

  full_build_sdist_wheel:
    name: no pythran & sdist+wheel, full, py3.11/npPre, pip+pytest
    needs: get_commit_message
    if: >
      needs.get_commit_message.outputs.message == 1
      && (github.repository == 'scipy/scipy' || github.repository == '')
    runs-on: windows-2022
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'environment.yml'

      - name: Install LLVM
        run: |
          Invoke-WebRequest https://github.com/llvm/llvm-project/releases/download/llvmorg-19.1.5/LLVM-19.1.5-win64.exe -UseBasicParsing -OutFile LLVM-x64.exe
          Start-Process -FilePath ".\LLVM-x64.exe" -ArgumentList "/S" -Wait
          echo "C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install rtools (optional)
        run: |
          choco install rtools -y --no-progress --force --version=4.0.0.20220206
          echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH

      - name: Install OpenBLAS
        shell: bash
        run: |
          set -xe
          python -m pip install -r requirements/openblas.txt
          bash tools/wheels/cibw_before_build_win.sh .
          echo "PKG_CONFIG_PATH=${{ github.workspace }}" >> $GITHUB_ENV

      - name: pip-packages
        run: |
          python -m pip install build delvewheel cython pybind11 meson-python meson ninja pytest pytest-xdist pytest-timeout pooch hypothesis
          python -m pip install --pre --upgrade --timeout=60 -i https://pypi.anaconda.org/scientific-python-nightly-wheels/simple numpy

      - name: Build
        shell: bash
        run: |
          export CC=clang-cl
          export CXX=clang-cl
          export FC=flang-new
          python -m build --no-isolation -x -Csetup-args="-Duse-pythran=false"

          wheel_name=$(ls dist/*.whl)
          openblas_dir=$(python -c"import scipy_openblas32 as sop; print(sop.get_lib_dir())")
          delvewheel repair --add-path $openblas_dir --no-dll libsf_error_state.dll -w wheelhouse $wheel_name

          python -m pip install wheelhouse/*

      - name: Test
        run: |
          cd $RUNNER_TEMP
          $env:OPENBLAS_NUM_THREADS=1
          pytest --pyargs scipy
